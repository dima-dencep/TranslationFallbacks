plugins {
    id "com.gradleup.shadow" version "9.0.1" apply false
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.11-SNAPSHOT" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${rootProject.minecraft_version}:${rootProject.parchment_version}@zip")
        }
    }

    processResources {
        inputs.property "version", version

        filesMatching(["META-INF/neoforge.mods.toml", "fabric.mod.json"]) {
            expand "version": version
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    base.archivesName = rootProject.archives_base_name
    version = "${rootProject.mod_version}+mc${rootProject.minecraft_version}-${project.name}"
    group = rootProject.maven_group

    repositories {
        maven {
            name = "NeoForged"
            url = "https://maven.neoforged.net/releases"
            content {
                excludeGroupByRegex "org.parchmentmc"
            }
        }
        maven {
            name = "ParchmentMC"
            url = "https://maven.parchmentmc.org"
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = "UTF-8"
        options.release.set 21
    }

    java {
        withSourcesJar()
    }

    publishing {
        repositories {
            maven {
                name = "RedlanceMinecraft"
                url = "https://repo.redlance.org/public"
                credentials {
                    username = "dima_dencep"
                    password = System.getenv("MAVEN_PASSWORD")
                }
            }
        }
    }
}